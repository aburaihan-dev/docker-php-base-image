name: Semantic Versioning, Docker Build, Push, and Scan

on:
  push:
    branches:
      - main

jobs:
  semver:
    runs-on: ubuntu-latest

    outputs:
      new_version: ${{ steps.bump-semver.outputs.new_version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Latest Tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1

      - name: Determine Version Bump Type
        id: determine-bump-type
        run: |
          echo "level=patch" >> $GITHUB_ENV
          if git log -1 --pretty=%B | grep -q 'bump: major'; then
            echo "level=major" >> $GITHUB_ENV
          elif git log -1 --pretty=%B | grep -q 'bump: minor'; then
            echo "level=minor" >> $GITHUB_ENV
          fi

      - name: Bump SemVer
        id: bump-semver
        uses: actions-ecosystem/action-bump-semver@v1
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ env.level }}

      - name: Set New Version Output
        id: set-new-version
        run: echo "new_version=${{ steps.bump-semver.outputs.new_version }}" >> $GITHUB_ENV

      - name: Push New Tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ env.new_version }}
          message: '${{ env.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

  docker:
    needs: semver
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - php_version: "8.2"
            variant: "debian"
            dockerfile: "./php-8.2/Dockerfile"
            context: "./php-8.2"
          - php_version: "8.2"
            variant: "alpine"
            dockerfile: "./php-8.2/Dockerfile.optimized"
            context: "./php-8.2"
          - php_version: "8.3"
            variant: "debian"
            dockerfile: "./php-8.3/Dockerfile"
            context: "./php-8.3"
          - php_version: "8.3"
            variant: "alpine"
            dockerfile: "./php-8.3/Dockerfile.optimized"
            context: "./php-8.3"
          - php_version: "8.4"
            variant: "debian"
            dockerfile: "./php-8.4/Dockerfile"
            context: "./php-8.4"
          - php_version: "8.4"
            variant: "alpine"
            dockerfile: "./php-8.4/Dockerfile.optimized"
            context: "./php-8.4"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.semver.outputs.new_version }}-php${{ matrix.php_version }}-${{ matrix.variant }}
            ghcr.io/${{ github.repository }}:php${{ matrix.php_version }}-${{ matrix.variant }}
            ghcr.io/${{ github.repository }}:latest-php${{ matrix.php_version }}-${{ matrix.variant }}

  scan:
    needs: [semver, docker]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - php_version: "8.2"
            variant: "alpine"
          - php_version: "8.3"
            variant: "alpine"
          - php_version: "8.4"
            variant: "alpine"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Trivy Vulnerability Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'image'
          image-ref: ghcr.io/${{ github.repository }}:${{ needs.semver.outputs.new_version }}-php${{ matrix.php_version }}-${{ matrix.variant }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'